{"version":3,"file":"component---src-pages-index-js-fba441035b2272054c89.js","mappings":"gPAAA,EAAe,IAA0B,kDC4GzC,MArGeA,IAEb,MAAMC,GAAOC,EAAAA,EAAAA,UACPC,GAAOD,EAAAA,EAAAA,UACPE,GAAOF,EAAAA,EAAAA,WAGP,EAACG,EAAU,EAACC,IAAeC,EAAAA,EAAAA,WAAS,IAS1CC,EAAAA,EAAAA,YAAU,KAER,SAASC,EAAOC,GACd,IAAIC,EAAQ,EAEZD,EAAQE,MAAMC,YAAY,SAAS,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,WACvDN,EAAQE,MAAMC,YAAY,SAAS,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,WACvDN,EAAQE,MAAMC,YAAY,SAAS,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,WAEvDC,aAAY,KACV,MAAMC,EAAuB,GAAhBJ,KAAKE,SAAgB,GAYlC,GAPAN,EAAQE,MAAMC,YAAY,SAAaK,EAAI,OAC3CR,EAAQE,MAAMC,YAAY,UAAU,KAIpCF,IAEIA,EAAQ,IAAO,EAAG,CACpB,MAAMQ,EAA0B,IAAhBL,KAAKE,SAAiB,GACtCN,EAAQE,MAAMC,YAAY,SAAaM,EAAO,OAC9C,MAAMC,EAAW,EAAIN,KAAKE,SAAW,EACrCN,EAAQE,MAAMC,YAAY,UAAU,GAAIO,EAE1C,CAEA,GAAIT,EAAQ,GAAM,EAAG,CAEnB,MAAMU,EAAOP,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBM,EAAOR,KAAKC,MAAsB,IAAhBD,KAAKE,UACvBO,EAAOT,KAAKC,MAAsB,IAAhBD,KAAKE,UAC7BN,EAAQE,MAAMC,YAAY,SAAS,GAAIQ,GACvCX,EAAQE,MAAMC,YAAY,SAAS,GAAIS,GACvCZ,EAAQE,MAAMC,YAAY,SAAS,GAAIU,EACzC,IAEC,GAEL,CAMA,OAJAd,EAAOR,EAAKuB,SACZf,EAAON,EAAKqB,SACZf,EAAOL,EAAKoB,SAEL,MAEN,GACA,IAEH,MAAMC,EAAaC,EACnB,OACE,2BACE,uBAAKC,UAAU,iBACf,uBAAKA,UAAS,qBAAsBtB,EAAY,WAAa,IAAMO,MAAO,CAAEgB,gBAAgB,OAAQH,EAAU,MAE5G,uBAAKE,UAAU,aAEb,2BACE,sBAAI,YAAU,UAAUE,IAAK5B,GAAM,WACnC,sBAAI,YAAU,iBAAiB4B,IAAK1B,GAAM,kBAC1C,sBAAI,YAAU,YAAY0B,IAAKzB,GAAM,cAIvC,uBAAKuB,UAAU,WACb,0BAAQA,UAAU,eAAeG,QA5EvB,KAClBxB,GAAY,GACZyB,OAAOC,YAAW,MAChBC,EAAAA,EAAAA,UAAS,oBAAoB,GAC5B,IAAI,GAyEK,sBAAI,YAAU,WAAU,eAU9B,ECnFV,MAbkB,IAAyB,IAAxB,KAAEC,EAAI,SAAElC,GAAU,EAInC,OACE,gBAAC,IAAM,CAACA,SAAUA,EAAUmC,MAHZ,QAKd,gBAAC,EAAK,MAEC,EAWN,MAAMC,EAAO,IAAM,gBAAC,IAAG,CAACD,MAAM,oB","sources":["webpack://gatsby-starter-blog/./src/components/apps/intro/bg1.jpg","webpack://gatsby-starter-blog/./src/components/apps/intro/index.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/bg1-216c7d7bfe6300cc77ef42f7044e1f62.jpg\";","import React, { useEffect, useRef, useState } from 'react';\n\nimport { navigate } from 'gatsby';\n\nimport image from './bg1.jpg'\n\nimport \"./intro.scss\"\nconst Intro = (location) => {\n\n  const ref1 = useRef();\n  const ref2 = useRef();\n  const ref3 = useRef();\n  \n\n  const [isTurnOff, setsTurnOff] = useState(false)\n\n  const handleClick = () => {\n    setsTurnOff(true)\n    window.setTimeout(()=> {\n      navigate('/showcase/profile');\n    }, 400)\n  };  \n\n  useEffect(() => {\n\n    function glitch(element) {\n      let count = 0\n\n      element.style.setProperty('--rgb1', `${Math.floor(Math.random() * 256)}`)\n      element.style.setProperty('--rgb2', `${Math.floor(Math.random() * 256)}`)\n      element.style.setProperty('--rgb3', `${Math.floor(Math.random() * 256)}`)  \n\n      setInterval(()=> {\n        const skew = Math.random() * 20 - 10\n\n        \n\n\n        element.style.setProperty('--skew', `${skew}deg`)    \n        element.style.setProperty('--scale', `1`)\n\n        \n\n        count++\n\n        if (count % 20 === 0) {\n          const bigSkew = Math.random() * 180 - 90\n          element.style.setProperty('--skew', `${bigSkew}deg`)\n          const bigScale = 1 + Math.random() / 2\n          element.style.setProperty('--scale', `${bigScale}`)              \n \n        }\n  \n        if (count % 5 === 0) {\n\n          const rgb1 = Math.floor(Math.random() * 256)\n          const rgb2 = Math.floor(Math.random() * 256)\n          const rgb3 = Math.floor(Math.random() * 256)          \n          element.style.setProperty('--rgb1', `${rgb1}`)\n          element.style.setProperty('--rgb2', `${rgb2}`)\n          element.style.setProperty('--rgb3', `${rgb3}`)     \n        }         \n\n      }, 80)\n\n    }\n    \n    glitch(ref1.current)\n    glitch(ref2.current)\n    glitch(ref3.current)    \n\n    return () => {\n      \n    }\n  }, [])  \n  \n  const background = image\n  return (\n    <div>\n      <div className='black-screen'></div>\n      <div className={`portfolio-intro  ${isTurnOff ? 'turn-off' : ''}`} style={{ backgroundImage: `url(${background})` }}>\n        \n        <div className='text-area'>\n\n          <div>\n            <h1 data-text=\"Hi i am\" ref={ref1}>Hi i am</h1>\n            <h1 data-text=\"WebApplication\" ref={ref2}>WebApplication</h1>\n            <h1 data-text=\"Developer\" ref={ref3}>Developer</h1>          \n          </div>\n\n\n          <div className='rainbow'>\n            <button className='showcase-btn' onClick={handleClick}>\n                <h2 data-text=\"PROFILE\">PROFILE</h2>      \n            </button>\n          </div>     \n\n          \n\n        </div>\n\n\n      </div>\n    </div>\n\n  )\n}\n\nexport default Intro","import * as React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Intro from \"../components/apps/intro\"\n\n\nconst BlogIndex = ({ data, location }) => {\n  \n  const siteTitle = 'jbin'\n    \n  return (\n    <Layout location={location} title={siteTitle}>\n\n      <Intro />\n\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"웹 애플리케이션 개발자 김정빈\" />\n"],"names":["location","ref1","useRef","ref2","ref3","isTurnOff","setsTurnOff","useState","useEffect","glitch","element","count","style","setProperty","Math","floor","random","setInterval","skew","bigSkew","bigScale","rgb1","rgb2","rgb3","current","background","image","className","backgroundImage","ref","onClick","window","setTimeout","navigate","data","title","Head"],"sourceRoot":""}