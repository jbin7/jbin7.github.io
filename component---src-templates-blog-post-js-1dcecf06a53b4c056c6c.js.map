{"version":3,"file":"component---src-templates-blog-post-js-1dcecf06a53b4c056c6c.js","mappings":"gKA2FA,IAtFe,IAAoC,IAAnC,SAAEA,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EAD6B,MAChBH,EAASI,UAEtB,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,aAC1B,YAAEC,EAAW,kBAAEC,IAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,GA+DtD,OA5DAC,EAAAA,EAAAA,YAAU,KAER,GAA2C,MAAvCC,aAAaC,QAAQ,eAAwB,CAC/C,MAAMC,EAAeC,OAAOC,WAAW,gCAAgCC,QAAU,OAAS,QAC1FL,aAAaM,QAAQ,cAAeJ,GACpCK,SAASC,gBAAgBC,aAAa,cAAeP,EACvD,MACEK,SAASC,gBAAgBC,aAAa,cAAeT,aAAaC,QAAQ,gBAG5EL,EAAkB,CAChBc,WAAYV,aAAaC,QAAQ,eACjCU,eAAe,EACfC,qBAAqB,IAGnBT,OAAOU,WAAa,MACtBjB,EAAkB,CAACe,eAAe,IAIpC,MAAMG,EAAe,KACnBrB,EAAYU,OAAOU,WAAW,EAMhC,OAHAV,OAAOY,iBAAiB,SAAUD,GAG3B,KACLX,OAAOa,oBAAoB,SAAUF,EAAa,CACnD,GAEA,KAEHf,EAAAA,EAAAA,YAAU,KAEwB,GAA7BJ,EAAYgB,eAA0BnB,EAAW,KAClDI,EAAkB,CAACe,eAAe,EAAMC,qBAAqB,IAExB,GAA7BjB,EAAYgB,eAAyBnB,EAAW,MACxDI,EAAkB,CAACe,eAAe,EAAOC,qBAAqB,GAChE,GAEC,CAACpB,IAkBF,2BACE,gBAAC,IAAG,MACJ,uBAAKyB,UAAS,6BACVtB,EAAYgB,cAAgB,YAAc,cAAY,cACtDhB,EAAYgB,eAAiBhB,EAAYiB,oBAAsB,kBAAoB,IAAE,eACpFjB,EAAYgB,eAAiBhB,EAAYiB,oBAAsB,mBAAqB,IAAE,aAEzF,oBAAmBtB,GAEnB,4BAAOD,IAGL,C,+CCrCV,IAvCY,IAAuC,IAAD,UAArC,YAAE6B,EAAW,MAAE9B,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAE8B,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBlC,MAExC,OACE,gCACE,6BAAQmC,EAAkBnC,EAAK,MAAMmC,EAAiBnC,GACtD,wBAAMoC,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASrC,IACnC,wBAAMsC,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASrC,IACpC,wBAAMoC,KAAK,sBAAsBC,QAASJ,IACzChC,EACA,C,6GCtCP,MA2DawC,EAAO,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQ,EACrD,OACE,gBAAC,IAAG,CACF5C,MAAO4C,EAAKC,YAAY7C,MACxB8B,YAAac,EAAKC,YAAYf,aAAec,EAAKE,SAClD,EAIN,UApEyB,IAGlB,IAAD,MAFJJ,MAAM,SAAEK,EAAQ,KAAEC,EAAI,KAAEjB,EAAMY,eAAgBC,GAAM,SACpD7C,GACD,EACC,MAAMkD,GAA6B,QAAjB,EAAAlB,EAAKG,oBAAY,aAAjB,EAAmBlC,QAAK,QAE1C,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOiD,GACjC,2BACE,2BACEpB,UAAU,YACVqB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYR,EAAKC,YAAY7C,OAC1C,yBAAI4C,EAAKC,YAAYQ,OAEvB,2BACEC,wBAAyB,CAAEC,OAAQX,EAAKY,MACxCJ,SAAS,gBAEX,2BACA,gCAIF,uBAAKvB,UAAU,iBACb,sBACE4B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGf,GACC,gBAAC,EAAAgB,KAAI,CAACC,GAAIjB,EAASkB,OAAOC,KAAMC,IAAI,QAAO,KACtCpB,EAASF,YAAY7C,QAI9B,0BACGgD,GACC,gBAAC,EAAAe,KAAI,CAACC,GAAIhB,EAAKiB,OAAOC,KAAMC,IAAI,QAC7BnB,EAAKH,YAAY7C,MAAM,UAQ7B,C","sources":["webpack://gatsby-starter-blog/./src/components/BlogLayout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\n\nimport Nav from \"../components/nav\"\nimport GlobalStateContext from '../context/GlobalStateContext';\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  const [appWidth, setAppWidth] = useState()\n  const { globalState, updateGlobalState } = useContext(GlobalStateContext);\n\n\n  useEffect(() => {\n    \n    if (localStorage.getItem('color-theme') == null) {\n      const osColorTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n      localStorage.setItem('color-theme', osColorTheme)\n      document.documentElement.setAttribute('color-theme', osColorTheme)\n    } else {\n      document.documentElement.setAttribute('color-theme', localStorage.getItem('color-theme'))\n    }        \n    \n    updateGlobalState({\n      colorTheme: localStorage.getItem('color-theme'),\n      isOpenSidebar: false,\n      isSidebarTransition: false,\n    })       \n            \n    if (window.innerWidth > 1200) {\n      updateGlobalState({isOpenSidebar: true})\n    }\n\n    \n    const handleResize = ()=> {\n      setAppWidth(window.innerWidth)\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    \n    return () => {\n      window.removeEventListener('resize', handleResize);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])  \n\n  useEffect(() => {\n    \n    if(globalState.isOpenSidebar == false && appWidth > 1200 ) {\n      updateGlobalState({isOpenSidebar: true, isSidebarTransition: true}) \n      \n    }else if (globalState.isOpenSidebar == true && appWidth < 1200) {\n      updateGlobalState({isOpenSidebar: false, isSidebarTransition: true}) \n    }\n\n  }, [appWidth])    \n\n\n  if (isRootPath) {\n    // header = (\n    //   <h1 className=\"main-heading\">\n    //     <Link to=\"/\">{title}</Link>\n    //   </h1>\n    // )\n  } else {\n    // header = (\n    //   <Link className=\"header-link-home\" to=\"/\">\n    //     {title}\n    //   </Link>\n    // )\n  }\n\n  return (\n    <div>         \n      <Nav/>\n      <div className={`blog-wrapper   \n        ${globalState.isOpenSidebar ? 'side-open' : 'side-close'}\n        ${globalState.isOpenSidebar && globalState.isSidebarTransition ? 'open-transition' : ''}\n        ${!globalState.isOpenSidebar && globalState.isSidebarTransition ? 'close-transition' : ''}\n        `}\n        data-is-root-path={isRootPath}>\n        {/* <header className=\"global-header\">{header}</header>    */}\n        <main>{children}</main>\n        {/* <footer></footer>      */}\n      </div>\n    </div>\n\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n\nimport Layout from \"../components/BlogLayout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div>\n        <article\n          className=\"blog-post\"\n          itemScope\n          itemType=\"http://schema.org/Article\"\n        >\n          <header>\n            <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n            <p>{post.frontmatter.date}</p>\n          </header>\n          <section\n            dangerouslySetInnerHTML={{ __html: post.html }}\n            itemProp=\"articleBody\"\n          />\n          <hr />\n          <footer>\n            \n          </footer>\n        </article>\n        <nav className=\"blog-post-nav\">\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>        \n\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          thumbnail {\n            childImageSharp {\n              fixed(width: 200, height: 200) {\n                src\n              }\n            }\n          }          \n        }\n      }\n    }    \n  }\n`\n"],"names":["location","title","children","isRootPath","pathname","appWidth","setAppWidth","useState","globalState","updateGlobalState","useContext","GlobalStateContext","useEffect","localStorage","getItem","osColorTheme","window","matchMedia","matches","setItem","document","documentElement","setAttribute","colorTheme","isOpenSidebar","isSidebarTransition","innerWidth","handleResize","addEventListener","removeEventListener","className","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","markdownRemark","post","frontmatter","excerpt","previous","next","siteTitle","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}